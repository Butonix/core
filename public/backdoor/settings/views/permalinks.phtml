<?php
// Let CoreProtector fight with all bad monkeys out there while you drink your tea
  require_once(__DIR__  . '/../../../CoreProtector.php');
  
  $stored_permalinks = $this->stored_permalinks_structure();
  $permalink_structure = $stored_permalinks['permalink_structure'];

  // TODOCHARTI temporary stuff to make it working
  $prefix = ''; // to be implemented
  $blog_prefix = ''; // to be implemented
  $is_nginx = false; // to be implemented
  $using_index_permalinks = false; // default ?p=3 permalinks /// to be implemented
  $writable = true; // to be implemented. already in wordpress.

?>
<style type="text/css">
  .active-option {background-color: beige !important}
</style>
<div class="wrap">

  <h1>Permalink Settings</h1>

<?php settings_errors(); ?>

  <form name="form" action="permalink.php" method="post">
  <?php wp_nonce_field( 'update-permalink' ); ?>

    <p class="lead">
    <?php
        echo __( 'Custom URL structures can improve the aesthetics, usability, and forward-compatibility of your links.');
      ?>
    </p>

  <?php
  if ( is_multisite() && ! is_subdomain_install() && is_main_site() && 0 === strpos( $stored_permalinks['permalink_structure'], '/blog/' ) ) {
    $permalink_structure = preg_replace( '|^/?blog|', '', $stored_permalinks['permalink_structure'] );
    $category_base       = preg_replace( '|^/?blog|', '', $stored_permalinks['category_base'] );
    $tag_base            = preg_replace( '|^/?blog|', '', $stored_permalinks['tag_base'] );
  }


  $structures = array(
    0 => '',
    1 => $prefix . '/%year%/%monthnum%/%day%/%postname%/',
    2 => $prefix . '/%year%/%monthnum%/%postname%/',
    3 => $prefix . '/' . _x( 'archives', 'sample permalink base' ) . '/%post_id%',
    4 => $prefix . '/%postname%/',
  );

  ?>


<div class="container permalink-structure">
  <div class="permalink-settings-option">
    <div class="row">
      <div class="col-lg-6">
        <label class="form-group bg-light p-3 rounded d-block mb-0">
            <input name="selection" type="radio" value="" <?php checked( '', $permalink_structure ); ?> />
            <strong><?php _e( 'Plain' ); ?> Geek</strong>
            <small class="my-2 d-block">Default format used by geeks</small>
            <code><?php echo get_option( 'home' ); ?>/?p=123</code>
        </label>
      </div>
      <div class="col-lg-6">
          <label class="form-group bg-light p-3 rounded d-block mb-0">
            <input name="selection" type="radio" value="<?php echo esc_attr( $structures[1] ); ?>" <?php checked( $structures[1], $permalink_structure ); ?> />
            <strong><?php _e( 'Day and name' ); ?></strong>
            <small class="my-2 d-block">Recommended for blogs</small>
            <code><?php echo get_option( 'home' ) . $blog_prefix . $prefix . '/' . gmdate( 'Y' ) . '/' . gmdate( 'm' ) . '/' . gmdate( 'd' ) . '/' . _x( 'sample-post', 'sample permalink structure' ) . '/'; ?></code>
          </label>
      </div>
    </div>
    <div class="row my-4">
      <div class="col-lg-6">
          <label class="form-group bg-light p-3 rounded d-block mb-0">
            <input name="selection" type="radio" value="<?php echo esc_attr( $structures[2] ); ?>" <?php checked( $structures[2], $permalink_structure ); ?> />
            <strong><?php _e( 'Month and name' ); ?></strong>
            <small class="my-2 d-block">Recommended for blogs</small>
            <code><?php echo get_option( 'home' ) . $blog_prefix . $prefix . '/' . gmdate( 'Y' ) . '/' . gmdate( 'm' ) . '/' . _x( 'sample-post', 'sample permalink structure' ) . '/'; ?></code>
          </label>
      </div>
      <div class="col-lg-6">
          <label class="form-group bg-light p-3 rounded d-block mb-0">
            <input name="selection" type="radio" value="<?php echo esc_attr( $structures[3] ); ?>" <?php checked( $structures[3], $permalink_structure ); ?> />
            <strong><?php _e( 'Numeric' ); ?></strong>
            <small class="my-2 d-block">Recommended for archive directory websites</small>
            <code><?php echo get_option( 'home' ) . $blog_prefix . $prefix . '/' . _x( 'archives', 'sample permalink base' ) . '/123'; ?></code>
          </label>
      </div>
    </div>

    <div class="row">
      <div class="col-lg-6">
          <label class="form-group bg-light p-3 rounded d-block mb-0">
            <input name="selection" type="radio" value="<?php echo esc_attr( $structures[4] ); ?>" <?php checked( $structures[4], $permalink_structure ); ?> />
            <strong><?php _e( 'Post name' ); ?></strong>
            <small class="my-2 d-block">Recommended for all websites</small>
            <code><?php echo get_option( 'home' ) . $blog_prefix . $prefix . '/' . _x( 'sample-post', 'sample permalink structure' ) . '/'; ?></code>
          </label>
      </div>
      <div class="col-lg-6">
          <label class="form-group bg-light p-3 rounded d-block mb-0">
            <input name="selection" id="custom_selection" type="radio" value="custom" <?php checked( ! in_array( $permalink_structure, $structures ) ); ?> />
            <strong><?php _e( 'Custom Structure' ); ?></strong>
            <small class="my-2 d-block">Custom links recommended for <strong>Pros</strong></small>
            <code><?php echo get_option( 'home' ) . $blog_prefix; ?></code>
          </label>
      </div>
    </div>
  </div>
    <div class="row mt-4">
      <div class="col-lg-8">
        <h5 class="h4">Permalinks Pattern</h5>
        <input name="permalink_structure" id="permalink_structure" type="text" value="<?php echo esc_attr( $this->stored_permalinks_structure()['permalink_structure'] ); ?>" class="form-control regular-text code" style="font-family:courier" />
        <small>If something goes wrong you can reset the pattern anytime by choosing a default one.</small>
      </div>
    </div>
    <div class="row">
      
      <div class="col-lg-8">
        <div class="available-structure-tags hide-if-no-js">
          <div id="custom_selection_updated" aria-live="assertive" class="screen-reader-text"></div>
          <?php
          $available_tags = array(
            /* translators: %s: Permalink structure tag. */
            'year'     => __( '%s (The year of the post, four digits, for example 2004.)' ),
            /* translators: %s: Permalink structure tag. */
            'monthnum' => __( '%s (Month of the year, for example 05.)' ),
            /* translators: %s: Permalink structure tag. */
            'day'      => __( '%s (Day of the month, for example 28.)' ),
            /* translators: %s: Permalink structure tag. */
            'hour'     => __( '%s (Hour of the day, for example 15.)' ),
            /* translators: %s: Permalink structure tag. */
            'minute'   => __( '%s (Minute of the hour, for example 43.)' ),
            /* translators: %s: Permalink structure tag. */
            'second'   => __( '%s (Second of the minute, for example 33.)' ),
            /* translators: %s: Permalink structure tag. */
            'post_id'  => __( '%s (The unique ID of the post, for example 423.)' ),
            /* translators: %s: Permalink structure tag. */
            'postname' => __( '%s (The sanitized post title (slug).)' ),
            /* translators: %s: Permalink structure tag. */
            'category' => __( '%s (Category slug. Nested sub-categories appear as nested directories in the URL.)' ),
            /* translators: %s: Permalink structure tag. */
            'author'   => __( '%s (A sanitized version of the author name.)' ),
          );

          /**
           * Filters the list of available permalink structure tags on the Permalinks settings page.
           *
           * @since 4.8.0
           *
           * @param string[] $available_tags An array of key => value pairs of available permalink structure tags.
           */
          $available_tags = apply_filters( 'available_permalink_structure_tags', $available_tags );

          /* translators: %s: Permalink structure tag. */
          $structure_tag_added = __( '%s added to permalink structure' );

          /* translators: %s: Permalink structure tag. */
          $structure_tag_already_used = __( '%s (already used in permalink structure)' );

          if ( ! empty( $available_tags ) ) :
            ?>
            <p><?php _e( 'Available tags:' ); ?></p>
            <ul role="list">
              <?php
              foreach ( $available_tags as $tag => $explanation ) {
                ?>
                <li class="d-inline-block">
                  <button type="button"
                      class="button button-secondary"
                      aria-label="<?php echo esc_attr( sprintf( $explanation, $tag ) ); ?>"
                      data-added="<?php echo esc_attr( sprintf( $structure_tag_added, $tag ) ); ?>"
                      data-used="<?php echo esc_attr( sprintf( $structure_tag_already_used, $tag ) ); ?>">
                    <?php echo '%' . $tag . '%'; ?>
                  </button>
                </li>
                <?php
              }
              ?>
            </ul>
          <?php endif; ?>
        </div>
      </div>

    </div>
    <div class="row">
      <div class="col-lg-12 mx-auto">
          <h2 class="title"><?php _e( 'Optional' ); ?></h2>
          <p class="lead">
          <?php
          /* translators: %s: Placeholder that must come at the start of the URL. */
          printf( __( 'If you like, you may enter custom structures for your category and tag URLs here. For example, using <code>topics</code> as your category base would make your category links like <code>%s/topics/uncategorized/</code>. If you leave these blank the defaults will be used.' ), get_option( 'home' ) . $blog_prefix . $prefix );
          ?>
          </p>

          <div class="row">
            <div class="col-lg-6">
                <label class="form-group bg-light p-3 rounded d-block mb-0">
                  <strong class="mb-2 d-block"><?php _e( 'Category base' ); ?></strong>
                  <?php echo $blog_prefix; ?> <input name="category_base" id="category_base" type="text" value="<?php echo get_option('category_base'); ?>" class="form-control code" />
                  <small>Tips: Type a dot (.) character to disable default the pattern</small>
                </label>
            </div>
            <div class="col-lg-6">
                <label class="form-group bg-light p-3 rounded d-block mb-0">
                  <strong class="mb-2 d-block"><?php _e( 'Tag base' ); ?></strong>
                  <?php echo $blog_prefix; ?> <input name="tag_base" id="tag_base" type="text" value="<?php echo get_option('tag_base'); ?>" class="form-control code" />
                  <small>Default <strong>/tag/</strong>%banana%</small>
                </label>
            </div>
            <?php do_settings_fields( 'permalink', 'optional' ); ?>
          </div>
          <div class="row">
            <?php do_settings_sections( 'permalink' ); ?>
            <div class="col-lg-12 mt-5 text-center">
              <?php submit_button('Update Changes', 'btn-dark px-4'); ?>
            </div>
          
          </div>
      </div>
    </div>
  </div>

  </form>
<?php if ( ! is_multisite() ) { ?>
  <?php
  if ( $stored_permalinks['iis7_permalinks'] ) :
    if ( isset( $_POST['submit'] ) && $permalink_structure && ! $using_index_permalinks && ! $writable ) :
      if ( file_exists( $home_path . 'web.config' ) ) :
        ?>
<p>
        <?php
        printf(
          /* translators: 1: web.config, 2: Documentation URL, 3: CTRL + a, 4: Element code. */
          __( 'If your %1$s file was <a href="%2$s">writable</a>, we could do this automatically, but it isn&#8217;t so this is the url rewrite rule you should have in your %1$s file. Click in the field and press %3$s to select all. Then insert this rule inside of the %4$s element in %1$s file.' ),
          '<code>web.config</code>',
          __( 'https://wordpress.org/support/article/changing-file-permissions/' ),
          '<kbd>CTRL + a</kbd>',
          '<code>/&lt;configuration&gt;/&lt;system.webServer&gt;/&lt;rewrite&gt;/&lt;rules&gt;</code>'
        );
        ?>
</p>
<form action="permalink.php" method="post">
        <?php wp_nonce_field( 'update-permalink' ); ?>
  <p><textarea rows="9" class="large-text readonly" name="rules" id="rules" readonly="readonly"><?php echo esc_textarea( $this->$wp_rewrite_data->iis7_url_rewrite_rules() ); ?></textarea></p>
</form>
<p>
        <?php
        printf(
          /* translators: %s: web.config */
          __( 'If you temporarily make your %s file writable for us to generate rewrite rules automatically, do not forget to revert the permissions after rule has been saved.' ),
          '<code>web.config</code>'
        );
        ?>
</p>
    <?php else : ?>
<p>
      <?php
      printf(
        /* translators: 1: Documentation URL, 2: web.config, 3: CTRL + a */
        __( 'If the root directory of your site was <a href="%1$s">writable</a>, we could do this automatically, but it isn&#8217;t so this is the url rewrite rule you should have in your %2$s file. Create a new file, called %2$s in the root directory of your site. Click in the field and press %3$s to select all. Then insert this code into the %2$s file.' ),
        __( 'https://wordpress.org/support/article/changing-file-permissions/' ),
        '<code>web.config</code>',
        '<kbd>CTRL + a</kbd>'
      );
      ?>
</p>
<form action="permalink.php" method="post">
      <?php wp_nonce_field( 'update-permalink' ); ?>
  <p><textarea rows="18" class="large-text readonly" name="rules" id="rules" readonly="readonly"><?php echo esc_textarea( $this->$wp_rewrite_data->iis7_url_rewrite_rules( true ) ); ?></textarea></p>
</form>
<p>
      <?php
      printf(
        /* translators: %s: web.config */
        __( 'If you temporarily make your site&#8217;s root directory writable for us to generate the %s file automatically, do not forget to revert the permissions after the file has been created.' ),
        '<code>web.config</code>'
      );
      ?>
</p>
    <?php endif; ?>
  <?php endif; ?>
<?php elseif ( $is_nginx ) : ?>
  <p><?php _e( '<a href="https://wordpress.org/support/article/nginx/">Documentation on Nginx configuration</a>.' ); ?></p>
  <?php
else :
  if ( $permalink_structure && ! $using_index_permalinks && ! $writable && $update_required ) :
    ?>
<p>
    <?php
    printf(
      /* translators: 1: .htaccess, 2: Documentation URL, 3: CTRL + a */
      __( 'If your %1$s file was <a href="%2$s">writable</a>, we could do this automatically, but it isn&#8217;t so these are the mod_rewrite rules you should have in your %1$s file. Click in the field and press %3$s to select all.' ),
      '<code>.htaccess</code>',
      __( 'https://wordpress.org/support/article/changing-file-permissions/' ),
      '<kbd>CTRL + a</kbd>'
    );
    ?>
</p>
<form action="permalink.php" method="post">
    <?php wp_nonce_field( 'update-permalink' ); ?>
  <p><textarea rows="6" class="large-text readonly" name="rules" id="rules" readonly="readonly"><?php echo esc_textarea( $this->$wp_rewrite_data->mod_rewrite_rules() ); ?></textarea></p>
</form>
  <?php endif; ?>
<?php endif; ?>
<?php } // End if ! is_multisite(). ?>

</div>


<script type="text/javascript">
  jQuery(document).ready(function($){
    $('.permalink-settings-option input[type="radio"]:checked').parent('.form-group').addClass('active-option');
  });
</script>